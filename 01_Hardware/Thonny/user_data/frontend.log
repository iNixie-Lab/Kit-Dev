19:19:52.356 [MainThread] INFO    thonny: Thonny version: 4.1.4
19:19:52.356 [MainThread] INFO    thonny: cwd: C:\Users\Sadudu\Desktop\iNixie-Kit\Thonny
19:19:52.356 [MainThread] INFO    thonny: original argv: []
19:19:52.356 [MainThread] INFO    thonny: sys.executable: C:\Users\Sadudu\Desktop\iNixie-Kit\Thonny\pythonw.exe
19:19:52.356 [MainThread] INFO    thonny: sys.argv: ['C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\thonny.exe']
19:19:52.356 [MainThread] INFO    thonny: sys.path: ['C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\python310.zip', 'C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\DLLs', 'C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\lib', 'C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny', 'C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\lib\\site-packages']
19:19:52.356 [MainThread] INFO    thonny: sys.flags: sys.flags(debug=0, inspect=0, interactive=0, optimize=0, dont_write_bytecode=0, no_user_site=1, no_site=0, ignore_environment=1, verbose=0, bytes_warning=0, quiet=0, hash_randomization=1, isolated=1, dev_mode=False, utf8_mode=0, warn_default_encoding=0, int_max_str_digits=-1)
19:19:55.612 [MainThread] INFO    thonny.workbench: Starting Workbench
19:19:55.721 [MainThread] INFO    thonny.workbench: Creating runner
19:19:55.742 [MainThread] INFO    thonny.workbench: Start loading plugins
19:19:56.521 [MainThread] INFO    thonny.workbench: Done loading plugins
19:19:56.522 [MainThread] WARNING thonny.workbench: Could not find UI theme 'clam', switching to default
19:19:56.617 [MainThread] INFO    thonny.workbench: Opening views
19:19:57.038 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
19:19:57.040 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\python.exe', '-u', '-B', 'C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Sadudu', "{'run.warn_module_shadowing': True}"] C:\Users\Sadudu
19:20:07.369 [MainThread] INFO    thonny.ui_utils: Parent y: 591, rooty: 666, vrooty: 0
19:20:07.369 [MainThread] INFO    thonny.ui_utils: Placing .!configurationdialog with geometry +1434+639
19:20:11.473 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:20:16.651 [MainThread] INFO    thonny.running: Killing backend process
19:20:16.651 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
19:20:16.652 [Thread-2 (_listen_stdout)] INFO    thonny.running: Reader got EOF
19:20:16.701 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\python.exe', '-s', '-u', '-B', 'C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\lib\\site-packages\\thonny\\plugins\\esp\\esp_back.py', "{'clean': False, 'port': 'COM3', 'dtr': None, 'rts': None, 'submit_mode': None, 'interrupt_on_connect': True, 'write_block_size': None, 'write_block_delay': None, 'proxy_class': 'ESP32Proxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] C:\Users\Sadudu
19:20:16.817 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
19:20:16.836 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:20:17.519 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:20:26.848 [MainThread] INFO    thonny.ui_utils: Parent y: 591, rooty: 666, vrooty: 0
19:20:26.848 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog with geometry +1581+928
19:20:37.581 [MainThread] INFO    thonny.ui_utils: Parent y: 591, rooty: 666, vrooty: 0
19:20:37.581 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog2 with geometry +1581+928
19:20:47.001 [MainThread] INFO    thonny: TIME/MODS 54.674 Before Run (+208 modules)
19:20:47.001 [MainThread] INFO    thonny: NEW MODS ['__future__', '_bisect', '_blake2', '_bz2', '_compression', '_ctypes', '_datetime', '_hashlib', '_heapq', '_lzma', '_queue', '_random', '_sha512', '_socket', '_ssl', '_struct', '_tkinter', '_uuid', 'adafruit_board_toolkit', 'adafruit_board_toolkit._list_ports_windows', 'base64', 'binascii', 'bisect', 'bz2', 'calendar', 'configparser', 'ctypes', 'ctypes._endian', 'ctypes.wintypes', 'datetime', 'email', 'email._encoded_words', 'email._parseaddr', 'email._policybase', 'email.base64mime', 'email.charset', 'email.encoders', 'email.errors', 'email.feedparser', 'email.header', 'email.iterators', 'email.message', 'email.parser', 'email.quoprimime', 'email.utils', 'encodings.ascii', 'errno', 'faulthandler', 'fnmatch', 'gettext', 'glob', 'hashlib', 'heapq', 'http', 'http.client', 'locale', 'lzma', 'math', 'msvcrt', 'nturl2path', 'pathlib', 'pkgutil', 'platform', 'posixpath', 'queue', 'quopri', 'random', 'select', 'selectors', 'serial', 'serial.serialutil', 'serial.serialwin32', 'serial.tools', 'serial.tools.list_ports_common', 'serial.win32', 'shlex', 'shutil', 'signal', 'socket', 'ssl', 'struct', 'subprocess', 'tempfile', 'textwrap', 'thonny.assistance', 'thonny.ast_utils', 'thonny.backend', 'thonny.base_file_browser', 'thonny.codeview', 'thonny.config', 'thonny.config_ui', 'thonny.editor_helpers', 'thonny.editors', 'thonny.first_run', 'thonny.languages', 'thonny.memory', 'thonny.misc_utils', 'thonny.plugins', 'thonny.plugins.about', 'thonny.plugins.assistant_config_page', 'thonny.plugins.ast_view', 'thonny.plugins.autocomplete', 'thonny.plugins.backend', 'thonny.plugins.backend_config_page', 'thonny.plugins.base_syntax_themes', 'thonny.plugins.base_ui_themes', 'thonny.plugins.birdseye_frontend', 'thonny.plugins.calltip', 'thonny.plugins.cells', 'thonny.plugins.circuitpython', 'thonny.plugins.circuitpython.cirpy_front', 'thonny.plugins.clean_ui_themes', 'thonny.plugins.coloring', 'thonny.plugins.commenting_indenting', 'thonny.plugins.common_editing_commands', 'thonny.plugins.cpython_backend', 'thonny.plugins.cpython_backend.cp_back', 'thonny.plugins.cpython_frontend', 'thonny.plugins.cpython_frontend.cp_front', 'thonny.plugins.cpython_frontend.cp_pip_gui', 'thonny.plugins.cpython_ssh', 'thonny.plugins.cpython_ssh.cps_front', 'thonny.plugins.debugger', 'thonny.plugins.dock_user_windows_frontend', 'thonny.plugins.editor_config_page', 'thonny.plugins.esp', 'thonny.plugins.esp.esp_back', 'thonny.plugins.ev3', 'thonny.plugins.event_logging', 'thonny.plugins.event_view', 'thonny.plugins.files', 'thonny.plugins.find_replace', 'thonny.plugins.general_config_page', 'thonny.plugins.goto_definition', 'thonny.plugins.heap', 'thonny.plugins.help', 'thonny.plugins.highlight_names', 'thonny.plugins.locals_marker', 'thonny.plugins.microbit', 'thonny.plugins.micropython', 'thonny.plugins.micropython.bare_metal_backend', 'thonny.plugins.micropython.base_flashing_dialog', 'thonny.plugins.micropython.connection', 'thonny.plugins.micropython.esptool_dialog', 'thonny.plugins.micropython.mp_back', 'thonny.plugins.micropython.mp_common', 'thonny.plugins.micropython.mp_front', 'thonny.plugins.micropython.pip_gui', 'thonny.plugins.micropython.uf2dialog', 'thonny.plugins.micropython.webrepl_connection', 'thonny.plugins.misc_analyzers', 'thonny.plugins.mypy', 'thonny.plugins.notes', 'thonny.plugins.object_inspector', 'thonny.plugins.outline', 'thonny.plugins.paren_matcher', 'thonny.plugins.pgzero_frontend', 'thonny.plugins.pi', 'thonny.plugins.pip_gui', 'thonny.plugins.prime_inventor', 'thonny.plugins.printing', 'thonny.plugins.pylint', 'thonny.plugins.pylint.messages', 'thonny.plugins.pythontutor', 'thonny.plugins.remove_old_data_dir', 'thonny.plugins.replayer', 'thonny.plugins.rp2040', 'thonny.plugins.rpi_pico', 'thonny.plugins.run_debug_config_page', 'thonny.plugins.shell_config_page', 'thonny.plugins.shell_macro', 'thonny.plugins.statement_boxes', 'thonny.plugins.stdlib_error_helpers', 'thonny.plugins.system_shell', 'thonny.plugins.terminal_config_page', 'thonny.plugins.theme_and_font_config_page', 'thonny.plugins.thonny_folders', 'thonny.plugins.todo_view', 'thonny.plugins.tomorrow_syntax_theme', 'thonny.plugins.variables', 'thonny.roughparse', 'thonny.rst_utils', 'thonny.running', 'thonny.shell', 'thonny.terminal', 'thonny.tktextext', 'thonny.token_utils', 'thonny.ui_utils', 'thonny.workbench', 'thonny.workdlg', 'tkinter', 'tkinter.commondialog', 'tkinter.constants', 'tkinter.dialog', 'tkinter.filedialog', 'tkinter.font', 'tkinter.messagebox', 'tkinter.simpledialog', 'tkinter.ttk', 'urllib', 'urllib.error', 'urllib.parse', 'urllib.request', 'urllib.response', 'uu', 'uuid', 'webbrowser', 'zlib']
19:20:47.003 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from machine import Pin\nimport time\nimport neopixel\n\nled = neopixel.NeoPixel(Pin(2,Pin.OUT),1,3,1)\n\np0 = Pin(10, Pin.OUT)    # create output pin on GPIO0\np1 = Pin(4, Pin.OUT)    # create output pin on GPIO4\np2 = Pin(5, Pin.OUT)    # create output pin on GPIO5\np3 = Pin(19, Pin.OUT)    # create output pin on GPIO7\np4 = Pin(6, Pin.OUT)    # create output pin on GPIO6\np5 = Pin(18, Pin.OUT)    # create output pin on GPIO8\np6 = Pin(7, Pin.OUT)    # create output pin on GPIO19\np7 = Pin(3, Pin.OUT)    # create output pin on GPIO3\np8 = Pin(9, Pin.OUT)    # create output pin on GPIO0\np9 = Pin(0, Pin.OUT)    # create output pin on GPIO0\n\ndef switch_dgm01_number(number,state):\n    p0.value(0)             \n    p1.value(0)\n    p2.value(0)\n    p3.value(0)\n    p4.value(0)\n    p5.value(0)\n    p6.value(0)\n    p7.value(0)\n    p8.value(0)\n    p9.value(0)\n    if number == 0:\n        p0.value(1)\n    elif number == 1:\n        p1.value(1)      \n    elif number == 2:\n        p2.value(1)\n    elif number == 3:\n        p3.value(1)\n    elif number == 4:\n        p4.value(1)\n    elif number == 5:\n        p5.value(1)\n    elif number == 6:\n        p6.value(1)\n    elif number == 7:\n        p7.value(1)\n    elif number == 8:\n        p8.value(1)\n    elif number == 9:\n        p9.value(1)\n\nwhile True:\n    \n    for i in range(10):\n        led[0]=(255,255,i*36)\n        led.write()\n        switch_dgm01_number(i,1)\n        time.sleep(1)\n        switch_dgm01_number(i,0)\n\n\n', name='Run', argv=[], id='cmd_10', local_cwd='C:\\Users\\Sadudu')
19:20:47.004 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:20:47.008 [MainThread] INFO    thonny: TIME/MODS 0.007 After Run 
19:20:52.073 [MainThread] INFO    thonny: TIME/MODS 5.065 Before Run 
19:20:52.073 [MainThread] INFO    thonny.running: Trying to execute current but runner is 'running'
19:20:52.403 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from machine import Pin\nimport time\nimport neopixel\n\nled = neopixel.NeoPixel(Pin(2,Pin.OUT),1,3,1)\n\np0 = Pin(10, Pin.OUT)    # create output pin on GPIO0\np1 = Pin(4, Pin.OUT)    # create output pin on GPIO4\np2 = Pin(5, Pin.OUT)    # create output pin on GPIO5\np3 = Pin(19, Pin.OUT)    # create output pin on GPIO7\np4 = Pin(6, Pin.OUT)    # create output pin on GPIO6\np5 = Pin(18, Pin.OUT)    # create output pin on GPIO8\np6 = Pin(7, Pin.OUT)    # create output pin on GPIO19\np7 = Pin(3, Pin.OUT)    # create output pin on GPIO3\np8 = Pin(9, Pin.OUT)    # create output pin on GPIO0\np9 = Pin(0, Pin.OUT)    # create output pin on GPIO0\n\ndef switch_dgm01_number(number,state):\n    p0.value(0)             \n    p1.value(0)\n    p2.value(0)\n    p3.value(0)\n    p4.value(0)\n    p5.value(0)\n    p6.value(0)\n    p7.value(0)\n    p8.value(0)\n    p9.value(0)\n    if number == 0:\n        p0.value(1)\n    elif number == 1:\n        p1.value(1)      \n    elif number == 2:\n        p2.value(1)\n    elif number == 3:\n        p3.value(1)\n    elif number == 4:\n        p4.value(1)\n    elif number == 5:\n        p5.value(1)\n    elif number == 6:\n        p6.value(1)\n    elif number == 7:\n        p7.value(1)\n    elif number == 8:\n        p8.value(1)\n    elif number == 9:\n        p9.value(1)\n\nwhile True:\n    \n    for i in range(10):\n        led[0]=(255,255,i*36)\n        led.write()\n        switch_dgm01_number(i,1)\n        time.sleep(1)\n        switch_dgm01_number(i,0)\n\n\n', name='Run', argv=[], id='cmd_12', local_cwd='C:\\Users\\Sadudu')
19:20:52.403 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:20:52.407 [MainThread] INFO    thonny: TIME/MODS 0.334 After Run 
19:20:55.872 [MainThread] INFO    thonny.running: Killing backend process
19:20:55.889 [Thread-4 (_listen_stdout)] INFO    thonny.running: Reader got EOF
19:20:55.977 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
19:20:55.985 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\python.exe', '-s', '-u', '-B', 'C:\\Users\\Sadudu\\Desktop\\iNixie-Kit\\Thonny\\lib\\site-packages\\thonny\\plugins\\esp\\esp_back.py', "{'clean': True, 'port': 'COM3', 'dtr': None, 'rts': None, 'submit_mode': None, 'interrupt_on_connect': True, 'write_block_size': None, 'write_block_delay': None, 'proxy_class': 'ESP32Proxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] C:\Users\Sadudu
19:20:56.106 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
19:20:56.133 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:20:56.848 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:21:01.734 [MainThread] ERROR   thonny.plugins.find_replace: Could not get seed text
Traceback (most recent call last):
  File "C:\Users\Sadudu\Desktop\iNixie-Kit\Thonny\lib\site-packages\thonny\plugins\find_replace.py", line 76, in __init__
    selected_lines = widget.selection_get().splitlines()
  File "C:\Users\Sadudu\Desktop\iNixie-Kit\Thonny\lib\tkinter\__init__.py", line 1007, in selection_get
    return self.tk.call(('selection', 'get') + self._options(kw))
_tkinter.TclError: PRIMARY selection doesn't exist or form "STRING" not defined
19:21:01.743 [MainThread] INFO    thonny.ui_utils: Parent y: 591, rooty: 666, vrooty: 0
19:21:01.743 [MainThread] INFO    thonny.ui_utils: Placing .!codeview2.!finddialog with geometry +1580+927
19:21:01.749 [MainThread] INFO    thonny: TIME/MODS 9.342 Before Run 
19:21:01.751 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from machine import Pin\nimport time\nimport neopixel\n\nled = neopixel.NeoPixel(Pin(2,Pin.OUT),1,3,1)\n\np0 = Pin(10, Pin.OUT)    # create output pin on GPIO0\np1 = Pin(4, Pin.OUT)    # create output pin on GPIO4\np2 = Pin(5, Pin.OUT)    # create output pin on GPIO5\np3 = Pin(19, Pin.OUT)    # create output pin on GPIO7\np4 = Pin(6, Pin.OUT)    # create output pin on GPIO6\np5 = Pin(18, Pin.OUT)    # create output pin on GPIO8\np6 = Pin(7, Pin.OUT)    # create output pin on GPIO19\np7 = Pin(3, Pin.OUT)    # create output pin on GPIO3\np8 = Pin(9, Pin.OUT)    # create output pin on GPIO0\np9 = Pin(0, Pin.OUT)    # create output pin on GPIO0\n\ndef switch_dgm01_number(number,state):\n    p0.value(0)             \n    p1.value(0)\n    p2.value(0)\n    p3.value(0)\n    p4.value(0)\n    p5.value(0)\n    p6.value(0)\n    p7.value(0)\n    p8.value(0)\n    p9.value(0)\n    if number == 0:\n        p0.value(1)\n    elif number == 1:\n        p1.value(1)      \n    elif number == 2:\n        p2.value(1)\n    elif number == 3:\n        p3.value(1)\n    elif number == 4:\n        p4.value(1)\n    elif number == 5:\n        p5.value(1)\n    elif number == 6:\n        p6.value(1)\n    elif number == 7:\n        p7.value(1)\n    elif number == 8:\n        p8.value(1)\n    elif number == 9:\n        p9.value(1)\n\nwhile True:\n    \n    for i in range(10):\n        led[0]=(255,255,i*36)\n        led.write()\n        switch_dgm01_number(i,1)\n        time.sleep(1)\n        switch_dgm01_number(i,0)\n\n\n', name='Run', argv=[], id='cmd_15', local_cwd='C:\\Users\\Sadudu')
19:21:01.751 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
19:21:01.756 [MainThread] INFO    thonny: TIME/MODS 0.007 After Run 
19:21:24.591 [MainThread] INFO    thonny.running: Killing backend process
19:21:24.596 [Thread-6 (_listen_stdout)] INFO    thonny.running: Reader got EOF
19:21:24.697 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
